name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Create EC2 private key file
        shell: bash
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "$EC2_PRIVATE_KEY" > ec2_private_key.pem
          chmod 400 "ec2_private_key.pem"
      - name: Copy Files to EC2
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Add commands to deploy your code to the EC2 instance
          # Example using SCP:
          scp -i ec2_private_key.pem -o StrictHostKeyChecking=no -r $(pwd)/*.{py,yml,txt} ec2-user@${{ secrets.EC2_HOST }}:~/$REPO_NAME
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: REPO_NAME
          script: |
            pip install --upgrade pip
            cd $REPO_NAME
            pip install --no-cache-dir -r requirements.txt
            sudo docker-compose up -d
            nohup python3 cronjob.py > output.log &
            # ssh -i ec2_private_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "pip install --upgrade pip && cd $REPO_NAME && pip install --no-cache-dir -r requirements.txt && sudo docker-compose up -d && python3 cronjob.py"
